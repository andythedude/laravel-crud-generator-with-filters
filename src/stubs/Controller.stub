<?php

namespace {{controllerNamespace}};

use {{modelNamespace}}\{{modelName}};
use Illuminate\Http\Request;

/**
 * Class {{modelName}}Controller
 * @package App\Http\Controllers
 */
class {{modelName}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        $get = $request->query();

        if (!empty($get)) {
            $models = $this->applyFilters({{modelName}}::class)->paginate();

            return view('{{modelView}}.index', [
                'models' => $models,
                'links' => $models->links(),
                'get' => $get,
            ])->with('i', (request()->input('page', 1) - 1) * $models->perPage());
        }

        $models = (new {{modelName}})->paginate();
        $links = $models->links();

        return view('{{modelView}}.index', compact('models', 'links'))
            ->with('i', (request()->input('page', 1) - 1) * $models->perPage());
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $model = new {{modelName}}();
        return view('{{modelView}}.create', compact('model'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        request()->validate({{modelName}}::$rules);

        $model = (new {{modelName}})->create($request->all());

        return redirect()->route('{{modelView}}.index')
            ->with('success', 'Record created');
    }

    /**
     * Display the specified resource.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $model = (new {{modelName}})->find($id);

        return view('{{modelView}}.show', compact('model'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $model = (new {{modelName}})->find($id);

        return view('{{modelView}}.edit', compact('model'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @param  {{modelName}} ${{modelNameLowerCase}}
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, {{modelName}} $model)
    {
        request()->validate({{modelName}}::$rules);

        $model->update($request->all());

        return redirect()->route('{{modelView}}.index')
            ->with('success', 'Record updated');
    }

    /**
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse
     * @throws \Exception
     */
    public function destroy($id)
    {
        $model = (new {{modelName}})->find($id)->delete();

        return redirect()->route('{{modelView}}.index')
            ->with('success', 'Record deleted');
    }
}
